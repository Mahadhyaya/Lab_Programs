#include<stdio.h>
#include<stdlib.h>

void read_matrix(int n) {        
	int i,j;          
  for(i=0;i<n;i++)             {         
     for(j=0;j<n;j++)                {           
       scanf("%d",&cost[i][j]);                             
   }                  
  }        
 }       

void print_matrix(int n)         {   
        int i,j;           
 for(i=0;i<n;i++)             {      
        for(j=0;j<n;j++)                {            
     printf("%d\t",cost[i][j]);               
 }                     
   printf("\n");            
 }        
 }

int d[6];
int p[6];
void diji(int source)    {  
	int aSource = source;     
  int i,j,u,v,min;  
   int s[10];     
for(i=0;i<n;i++)      {      
       
s[i]=0;      
 p[i]=source;   
}
//s[source] = 1;
int min = 0;

for (int j = 0; j < n - 1; j++) {
int max = min + d[source];
	min= 99;
for (int l = 0; l < n; l++) {	
d[l]=cost[source][l]; 
}
int l = 0;
	
		for (int k = 0; k < n; k++) {
if (s[k] == 0) {
			if (d[k] + max < min){
			min = d[k] + max;
			s[k] = 1;
			l = k;
			p[k] = source;
			source = k;		
}
}
		}
 int i;           
i=l;      
     while(i!= aSource) {    
printf("%d<--",i);    i=p[i];           
}
           printf("%d = %d",i,min);
	

}


   
}




void main() {
	int j,source;  
    printf("Number of vertices");    
  scanf("%d",&n);    
  printf ("Enter the cost adjacency matrix\n");     
 read_matrix(n);    
  printf (" ======cost adjacency matrix=========\n");     
print_matrix(n);     
printf (" ====================================\n");     
printf ("Enter the source vertex\n");     
scanf("%d",&source); 
}